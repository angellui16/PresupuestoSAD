<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>